{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  items: [],\n  status: null,\n  error: null\n};\nexport const productsFetch = createAsyncThunk(\"products/productsFetch\", async function () {\n  let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let {\n    rejectWithValue\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  try {\n    const response = await axios.get(\"http://localhost:5000/products\");\n    return response === null || response === void 0 ? void 0 : response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [productsFetch.pending]: (state, action) => {\n      state.status = \"pending\";\n    },\n    [productsFetch.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.item = action.payload;\n    },\n    [productsFetch.rejected]: (state, action) => {\n      state.status = \"rejected\";\n      state.error = action.payload;\n    }\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","items","status","error","productsFetch","id","arguments","length","undefined","rejectWithValue","response","get","data","productsSlice","name","reducers","extraReducers","pending","state","action","fulfilled","item","payload","rejected","reducer"],"sources":["C:/Users/lemin/OneDrive - Witmark/Máy tính/practice/online-shopping/frontend/src/features/productsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n    items: [],\r\n    status: null,\r\n    error: null,\r\n};\r\n\r\nexport const productsFetch = createAsyncThunk(\r\n    \"products/productsFetch\", \r\n    async(id=null, { rejectWithValue }) => {\r\n        try{\r\n            const response = await axios.get(\"http://localhost:5000/products\");\r\n            return response?.data; \r\n            } catch(error){\r\n            return rejectWithValue(error.response.data);\r\n            }\r\n    }\r\n)\r\n\r\nconst productsSlice = createSlice({\r\n    name: \"products\",\r\n    initialState,\r\n    reducers: {}, \r\n    extraReducers:{\r\n        [productsFetch.pending]:(state, action) => {\r\n            state.status = \"pending\";\r\n        },\r\n        [productsFetch.fulfilled]:(state, action) => {\r\n            state.status = \"success\";\r\n            state.item = action.payload\r\n        },\r\n        [productsFetch.rejected]:(state, action) => {\r\n            state.status = \"rejected\";\r\n            state.error = action.payload;\r\n        },\r\n    }\r\n});\r\n\r\nexport default productsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGN,gBAAgB,CACzC,wBAAwB,EACxB,kBAAuC;EAAA,IAAjCO,EAAE,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,IAAI;EAAA,IAAE;IAAEG;EAAgB,CAAC,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC9B,IAAG;IACC,MAAME,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,gCAAgC,CAAC;IAClE,OAAOD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI;EACrB,CAAC,CAAC,OAAMT,KAAK,EAAC;IACd,OAAOM,eAAe,CAACN,KAAK,CAACO,QAAQ,CAACE,IAAI,CAAC;EAC3C;AACR,CAAC,CACJ;AAED,MAAMC,aAAa,GAAGhB,WAAW,CAAC;EAC9BiB,IAAI,EAAE,UAAU;EAChBd,YAAY;EACZe,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAC;IACV,CAACZ,aAAa,CAACa,OAAO,GAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvCD,KAAK,CAAChB,MAAM,GAAG,SAAS;IAC5B,CAAC;IACD,CAACE,aAAa,CAACgB,SAAS,GAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACzCD,KAAK,CAAChB,MAAM,GAAG,SAAS;MACxBgB,KAAK,CAACG,IAAI,GAAGF,MAAM,CAACG,OAAO;IAC/B,CAAC;IACD,CAAClB,aAAa,CAACmB,QAAQ,GAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MACxCD,KAAK,CAAChB,MAAM,GAAG,UAAU;MACzBgB,KAAK,CAACf,KAAK,GAAGgB,MAAM,CAACG,OAAO;IAChC;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeT,aAAa,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}